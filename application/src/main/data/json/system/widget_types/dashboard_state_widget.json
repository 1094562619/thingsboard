{
  "fqn": "cards.dashboard_state_widget",
  "name": "Dashboard state widget",
  "deprecated": false,
  "image": "/api/images/system/cards.dashboard_state_widget.png",
  "description": "Displays specified dashboard state inside widget. Advanced widget settings allows you to configure target dashboard state to be displayed.",
  "descriptor": {
    "type": "static",
    "sizeX": 7.5,
    "sizeY": 3,
    "resources": [],
    "templateHtml": "<tb-dashboard-state *ngIf=\"stateId\" [ctx]=\"ctx\" [stateId]=\"stateId\"\n                                    [defaultAutofillLayout]=\"defaultAutofillLayout\"\n                                    [defaultMargin]=\"defaultMargin\"\n                                    [defaultBackgroundColor]=\"defaultBackgroundColor\"\n                                    [syncParentStateParams]=\"syncParentStateParams\">\n</tb-dashboard-state>\n<div *ngIf=\"!stateId\" class=\"dashboard-state-widget-prompt\">\n    <div class=\"title\">Dashboard state widget</div>\n    <div class=\"subtitle\">(Specify dashboard state id in the advanced widget settings)</div>\n</div>\n",
    "templateCss": ".dashboard-state-widget-prompt {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    font-size: 32px;\n    font-weight: 500;\n    color: #999;\n}\n\n.dashboard-state-widget-prompt .title {\n    font-size: 32px;\n    font-weight: 500;\n    color: #999;\n}\n\n.dashboard-state-widget-prompt .subtitle {\n    font-size: 24px;\n    font-weight: normal;\n    color: #999;\n    text-align: center;\n}",
    "controllerScript": "self.onInit = function() {\n    var $injector = self.ctx.$scope.$injector;\n    self.ctx.$scope.stateId = self.ctx.settings.stateId || \"\";\n    self.ctx.$scope.defaultAutofillLayout = self.ctx.settings.defaultAutofillLayout;\n    self.ctx.$scope.defaultMargin = self.ctx.settings.defaultMargin;\n    self.ctx.$scope.defaultBackgroundColor = self.ctx.settings.defaultBackgroundColor;\n    self.ctx.$scope.syncParentStateParams = self.ctx.settings.syncParentStateParams !== false;\n}\n\n\nself.onDestroy = function() {\n}\n",
    "settingsSchema": "",
    "dataKeySettingsSchema": "",
    "settingsDirective": "tb-dashboard-state-widget-settings",
    "defaultConfig": "{\"datasources\":[{\"type\":\"static\",\"name\":\"function\",\"dataKeys\":[{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"Random\",\"color\":\"#2196f3\",\"settings\":{},\"_hash\":0.15479322438769105,\"funcBody\":\"var value = prevValue + Math.random() * 100 - 50;\\nvar multiplier = Math.pow(10, 2 || 0);\\nvar value = Math.round(value * multiplier) / multiplier;\\nif (value < -1000) {\\n\\tvalue = -1000;\\n} else if (value > 1000) {\\n\\tvalue = 1000;\\n}\\nreturn value;\"}]}],\"timewindow\":{\"realtime\":{\"timewindowMs\":60000}},\"showTitle\":false,\"backgroundColor\":\"rgb(255, 255, 255)\",\"color\":\"rgba(0, 0, 0, 0.87)\",\"padding\":\"0px\",\"settings\":{\"syncParentStateParams\":true,\"defaultAutofillLayout\":true,\"defaultMargin\":0,\"defaultBackgroundColor\":\"#fff\"},\"title\":\"Dashboard state widget\",\"dropShadow\":true,\"enableFullscreen\":false,\"widgetStyle\":{},\"widgetCss\":\"\",\"noDataDisplayMessage\":\"\",\"showLegend\":false}"
  },
  "externalId": null,
  "tags": [
    "embed",
    "embedded",
    "inner"
  ]
}